export const RPSTournamentABI = [
  {
    type: "constructor",
    inputs: [
      { name: "_oracle", type: "address", internalType: "address" },
      { name: "_computerAI", type: "address", internalType: "address" },
      { name: "_fundManager", type: "address", internalType: "address" },
    ],
    stateMutability: "nonpayable",
  },
  { type: "receive", stateMutability: "payable" },
  {
    type: "function",
    name: "computerAI",
    inputs: [],
    outputs: [
      { name: "", type: "address", internalType: "contract IComputerAI" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "fundManager",
    inputs: [],
    outputs: [
      { name: "", type: "address", internalType: "contract IFundManager" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "games",
    inputs: [{ name: "", type: "address", internalType: "address" }],
    outputs: [
      { name: "totalRounds", type: "uint256", internalType: "uint256" },
      { name: "currentRound", type: "uint256", internalType: "uint256" },
      { name: "playerWins", type: "uint256", internalType: "uint256" },
      { name: "computerWins", type: "uint256", internalType: "uint256" },
      {
        name: "state",
        type: "uint8",
        internalType: "enum IRPSTournament.GameState",
      },
      { name: "gameSeed", type: "uint256", internalType: "uint256" },
      { name: "playerBet", type: "uint256", internalType: "uint256" },
      { name: "computerBet", type: "uint256", internalType: "uint256" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getGameStatus",
    inputs: [{ name: "player", type: "address", internalType: "address" }],
    outputs: [
      {
        name: "state",
        type: "uint8",
        internalType: "enum IRPSTournament.GameState",
      },
      { name: "totalRounds", type: "uint256", internalType: "uint256" },
      { name: "currentRound", type: "uint256", internalType: "uint256" },
      { name: "playerWins", type: "uint256", internalType: "uint256" },
      { name: "computerWins", type: "uint256", internalType: "uint256" },
      { name: "playerBet", type: "uint256", internalType: "uint256" },
      { name: "computerBet", type: "uint256", internalType: "uint256" },
      { name: "totalPot", type: "uint256", internalType: "uint256" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getMoveHistory",
    inputs: [{ name: "", type: "address", internalType: "address" }],
    outputs: [
      { name: "playerMoves", type: "uint256[]", internalType: "uint256[]" },
      { name: "computerMoves", type: "uint256[]", internalType: "uint256[]" },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "oracle",
    inputs: [],
    outputs: [
      { name: "", type: "address", internalType: "contract IRandomOracle" },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "playRound",
    inputs: [
      {
        name: "playerMove",
        type: "uint8",
        internalType: "enum IRPSTournament.Move",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "startGame",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "GameCompleted",
    inputs: [
      {
        name: "player",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "result",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "playerWins",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "computerWins",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "payout",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "GameStarted",
    inputs: [
      {
        name: "player",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "totalRounds",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "playerBet",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "computerBet",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RoundPlayed",
    inputs: [
      {
        name: "player",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "round",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "playerMove",
        type: "uint8",
        indexed: false,
        internalType: "enum IRPSTournament.Move",
      },
      {
        name: "computerMove",
        type: "uint8",
        indexed: false,
        internalType: "enum IRPSTournament.Move",
      },
      {
        name: "result",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  { type: "error", name: "ComputerBetFailed", inputs: [] },
  { type: "error", name: "GameAlreadyCompleted", inputs: [] },
  { type: "error", name: "GameAlreadyInProgress", inputs: [] },
  { type: "error", name: "MustPlaceBet", inputs: [] },
  { type: "error", name: "NoActiveGame", inputs: [] },
  { type: "error", name: "TransferFailed", inputs: [] },
] as const;
